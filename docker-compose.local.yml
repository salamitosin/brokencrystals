# # # services:
# # #   db:
# # #     image: postgres
# # #     restart: always
# # #     healthcheck:
# # #       interval: 10s
# # #       retries: 10
# # #       test:
# # #         [
# # #           'CMD-SHELL',
# # #           'pg_isready',
# # #           '-U',
# # #           '${POSTGRES_USER}',
# # #           '-P',
# # #           '${POSTGRES_PASSWORD}'
# # #         ]
# # #       timeout: 45s
# # #     environment:
# # #       POSTGRES_DB: bc
# # #       POSTGRES_USER: bc
# # #       POSTGRES_PASSWORD: bc
# # #     ports:
# # #       - 5432:5432
# # #     volumes:
# # #       - ./pg.sql:/docker-entrypoint-initdb.d/pg.sql

# # #   nodejs:
# # #     build:
# # #       context: '.'
# # #       dockerfile: Dockerfile
# # #     container_name: nodejs
# # #     restart: always
# # #     environment:
# # #       URL: http://localhost:3000
# # #       # DATABASE_URL: "postgresql://bc:bc@db:5432/bc"
# # #     ports:
# # #       - '3000:3000'
# # #     logging:
# # #       options:
# # #         max-file: '5'
# # #         max-size: '10m'
# # #     depends_on:
# # #       - db
# # #     image: brokencrystals:latest  # Add this line to specify the image name and tag

# # #   mailcatcher:
# # #     image: sj26/mailcatcher
# # #     container_name: mailcatcher
# # #     restart: always
# # #     ports:
# # #       - '1080:1080'
# # #       - '1025:1025'
# # #     logging:
# # #       options:
# # #         max-file: '5'
# # #         max-size: '10m'


# # # /////////////

# # version: '3.8'

# # services:
# #   db:
# #     image: postgres
# #     restart: always
# #     healthcheck:
# #       interval: 10s
# #       retries: 10
# #       test:
# #         [
# #           'CMD-SHELL',
# #           'pg_isready',
# #           '-U',
# #           'bc',  # Use the username directly here
# #           '-P',
# #           'bc'   # Use the password directly here
# #         ]
# #       timeout: 45s
# #     environment:
# #       POSTGRES_DB: bc
# #       POSTGRES_USER: bc
# #       POSTGRES_PASSWORD: bc
# #     ports:
# #       - 5432:5432
# #     volumes:
# #       - ./pg.sql:/docker-entrypoint-initdb.d/pg.sql

# #   nodejs:
# #     build:
# #       context: '.'
# #       dockerfile: Dockerfile
# #     container_name: nodejs
# #     restart: always
# #     environment:
# #       DATABASE_URL: "postgresql://bc:bc@db:5432/bc"  # Directly reference the DB URL
# #     ports:
# #       - '3000:3000'
# #     logging:
# #       options:
# #         max-file: '5'
# #         max-size: '10m'
# #     depends_on:
# #       - db
# #     image: brokencrystals:latest  # Ensure this matches your local image name

# #   mailcatcher:
# #     image: sj26/mailcatcher
# #     container_name: mailcatcher
# #     restart: always
# #     ports:
# #       - '1080:1080'
# #       - '1025:1025'
# #     logging:
# #       options:
# #         max-file: '5'
# #         max-size: '10m'

# version: '3.8'

# services:
#   db:
#     image: postgres
#     restart: always
#     healthcheck:
#       interval: 10s
#       retries: 10
#       test:
#         [
#           'CMD-SHELL',
#           'pg_isready -U bc -P bc'
#         ]
#       timeout: 45s
#     environment:
#       POSTGRES_DB: bc
#       POSTGRES_USER: bc
#       POSTGRES_PASSWORD: bc
#     ports:
#       - 5432:5432
#     volumes:
#       - ./pg.sql:/docker-entrypoint-initdb.d/pg.sql

#   nodejs:
#     build:
#       context: '.'
#       dockerfile: Dockerfile
#     container_name: nodejs
#     restart: always
#     environment:
#       DATABASE_URL: "postgresql://bc:bc@db:5432/bc"  # Directly reference the DB URL
#     ports:
#       - '3000:3000'
#     logging:
#       options:
#         max-file: '5'
#         max-size: '10m'
#     depends_on:
#       - db
#     image: brokencrystals:latest  # Ensure this matches your local image name

#   mailcatcher:
#     image: sj26/mailcatcher
#     container_name: mailcatcher
#     restart: always
#     ports:
#       - '1080:1080'
#       - '1025:1025'
#     logging:
#       options:
#         max-file: '5'
#         max-size: '10m'


services:
  db:
    image: postgres
    restart: always
    healthcheck:
      interval: 10s
      retries: 10
      test:
        [
          'CMD-SHELL',
          'pg_isready',
          '-U',
          '${POSTGRES_USER}',
          '-P',
          '${POSTGRES_PASSWORD}'
        ]
      timeout: 45s
    environment:
      POSTGRES_DB: bc
      POSTGRES_USER: bc
      POSTGRES_PASSWORD: bc
    ports:
      - 5432:5432
    volumes:
      - ./pg.sql:/docker-entrypoint-initdb.d/pg.sql

  nodejs:
    build:
      context: '.'
      dockerfile: Dockerfile
    container_name: nodejs
    restart: always
    environment:
      URL: http://localhost:3000
    ports:
      - '3000:3000'
    logging:
      options:
        max-file: '5'
        max-size: '10m'
    depends_on:
      - db

  mailcatcher:
    image: sj26/mailcatcher
    container_name: mailcatcher
    restart: always
    ports:
      - '1080:1080'
      - '1025:1025'
    logging:
      options:
        max-file: '5'
        max-size: '10m'

