name: "CI/CD with Security Best Practices"

on:
  push:
    branches:
      - stable
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

<<<<<<< HEAD
    - name: SonarQube Scan SAST
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

# - name: Set up Docker Buildx
#   uses: docker/setup-buildx-action@v2

# - name: Install Docker Compose
#   run: |
#     sudo apt-get update
#     sudo apt-get install -y docker-compose

# - name: Build Docker image using docker-compose.local.yml
#   run: docker-compose -f docker-compose.local.yml build | tee docker-build-log.txt

# - name: Verify Docker image is built
#   run: |
#     docker images | grep brokencrystals_nodejs || { echo "Image brokencrystals_nodejs:latest not found."; exit 1; }

# - name: Tag Docker Image
#   run: |
#     docker tag brokencrystals_nodejs:latest docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/brokencrystals_nodejs:${{ github.sha }}

# - name: Log in to Docker Hub
#   run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

# - name: Push Docker image to Docker Hub
#   run: docker push docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/brokencrystals_nodejs:${{ github.sha }}
=======
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "http://localhost:9000"
        
      # Add other steps for your build and deployment as needed
>>>>>>> 3de7d34df075104771fa300f88f12c80d164bccb
