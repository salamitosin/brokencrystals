name: "CI/CD with Security Best Practices"

on:
  push:
    branches:
    - stable
    - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Shallow clones should be disabled for better relevancy of analysis

    - name: SonarQube Scan SAST
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }} # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Install dependency for scanning
      run: npm install

    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install -y curl
        TRIVY_VERSION=0.34.0 # Update to the latest version as needed
        curl -sSL https://github.com/aquasecurity/trivy/releases/download/v$TRIVY_VERSION/trivy_0.34.0_Linux-64bit.deb -o trivy.deb
        sudo dpkg -i trivy.deb
        rm trivy.deb

    - name: Run Trivy
      run: trivy fs . > trivyfs.txt

    - name: Commit Trivy Report
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add trivyfs.txt
        git commit -m "Add Trivy scan report" --no-verify
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.ref }}


    - name: Install Docker Compose
      # Optional Docker steps
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Build Docker image using docker-compose.local.yml
      run: docker-compose -f docker-compose.local.yml --build

    - name: Verify Docker image is built
      run: |
        docker images | grep brokencrystals_nodejs || { echo "Image brokencrystals_nodejs:latest not found."; exit 1; }

    - name: Tag Docker Image
      run: |
        docker tag brokencrystals_nodejs ziemieu86/brokencrystals_nodejs:latest
        docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_TOKEN}}
        docker push  ziemieu86/brokencrystals_nodejs:latest

      # env:
#   DOCKER_CLI_ACI: 1


# name: "CI/CD with Security Best Practices"

# on:
#   push:
#     branches:
#       - stable
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened]

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4
#       with:
#         fetch-depth: 0 # Shallow clones should be disabled for better relevancy of analysis

#     - name: SonarQube Scan SAST
#       uses: SonarSource/sonarcloud-github-action@master
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#     - name: Install dependency for scanning
#       run: npm install

#     - name: Install Trivy
#       run: |
#         sudo apt-get update
#         sudo apt-get install -y curl
#         TRIVY_VERSION=0.34.0 # Update to the latest version as needed
#         curl -sSL https://github.com/aquasecurity/trivy/releases/download/v$TRIVY_VERSION/trivy_0.34.0_Linux-64bit.deb -o trivy.deb
#         sudo dpkg -i trivy.deb
#         rm trivy.deb

#     - name: Run Trivy
#       run: |
#         trivy fs . > trivyfs.txt || { echo "Trivy found vulnerabilities."; exit 1; }

#     - name: Commit Trivy Report
#       if: success() # Only run if previous steps were successful
#       run: |
#         git config --local user.email "action@github.com"
#         git config --local user.name "GitHub Action"
#         git add trivyfs.txt
#         git commit -m "Add Trivy scan report" --no-verify
#         git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.ref }}

#     - name: Install Docker Compose
#       run: |
#         sudo apt-get update
#         sudo apt-get install -y docker-compose

#     - name: Build Docker image using docker-compose.local.yml
#       run: docker-compose -f docker-compose.local.yml --build

#     - name: Verify Docker image is built
#       run: |
#         docker images | grep brokencrystals_nodejs || { echo "Image brokencrystals_nodejs:latest not found."; exit 1; }

#     - name: Tag Docker Image
#       run: |
#         docker tag brokencrystals_nodejs ziemieu86/brokencrystals_nodejs:latest
#         echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#         docker push ziemieu86/brokencrystals_nodejs:latest
