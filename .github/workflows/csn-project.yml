name: "CI/CD with Security Best Practices"

on:
  push:
    branches:
    - stable
    - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Build Docker image
    - name: Build Docker image
      run: docker build -t brokencrystals:${{ github.sha }} . | tee docker-build-log.txt

    # Scan Docker image with Trivy
    - name: Scan Docker Image with Trivy
      run: |
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image brokencrystals:${{ github.sha }} \
        --format template --template "@contrib/html.tpl" -o trivy-scan-report.html

    #   run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    # - name: Push Docker image
    #   run: docker push myapp:${{ github.sha }}

    # # Deploy to Kubernetes
    # - name: Deploy to Kubernetes
    #   run: kubectl apply -f k8s/deployment.yml

    # Run OWASP ZAP for DAST
    - name: Run OWASP ZAP DAST
      # # Push Docker image to Docker Hub or ECR
      # - name: Log in to Docker Hub
      run: |
        docker run -v $(pwd):/zap/wrk/:rw --network="host" owasp/zap2docker-stable zap-baseline.py \
          -t http://localhost:3000 -r owasp-zap-dast-report.html

    - name: Upload Trivy Docker Scan Report
      # Upload Reports as Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: trivy-scan-report
        path: trivy-scan-report.html

    - name: Upload OWASP ZAP DAST Report
      uses: actions/upload-artifact@v3
      with:
        name: owasp-zap-dast-report
        path: owasp-zap-dast-report.html

    - name: Upload Docker Build Log
      uses: actions/upload-artifact@v3
      with:
        name: docker-build-log
        path: docker-build-log.txt

# # Commit Scan Results to Repo
# - name: Commit Scan Reports
#   run: |
#     git config --global user.email "ci-bot@mycompany.com"
#     git config --global user.name "CI Bot"
#     git checkout ${{ github.ref }}
#     git add trivy-scan-report.html owasp-zap-dast-report.html docker-build-log.txt
#     git commit -m "Add CI/CD scan results and build logs"
#     git push
